/* eslint-disable import/no-dynamic-require */
'use strict';
const ok = require('assert').ok;
let tested = 0;
let PATH;

function load(module) {
  tested++;
  return require(`${ PATH }/${ module }`);
}

for (const _PATH of ['../packages/core-js-pure', '../packages/core-js']) {
  PATH = _PATH;
  ok(load('fn/object/assign')({ q: 1 }, { w: 2 }).w === 2);
  ok(load('fn/object/create')(Array.prototype) instanceof Array);
  ok(load('fn/object/define-property')({}, 'a', { value: 42 }).a === 42);
  ok(load('fn/object/define-properties')({}, { a: { value: 42 } }).a === 42);
  ok(load('fn/object/freeze')({}));
  ok(load('fn/object/get-own-property-descriptor')({ q: 1 }, 'q').enumerable);
  ok(load('fn/object/get-own-property-names')({ q: 42 })[0] === 'q');
  ok(load('fn/object/get-own-property-symbols')({ [Symbol()]: 42 }).length === 1);
  ok(load('fn/object/get-prototype-of')([]) === Array.prototype);
  ok(load('fn/object/is')(NaN, NaN));
  ok(load('fn/object/is-extensible')({}));
  ok(!load('fn/object/is-frozen')({}));
  ok(!load('fn/object/is-sealed')({}));
  ok(load('fn/object/keys')({ q: 0 })[0] === 'q');
  ok(load('fn/object/prevent-extensions')({}));
  ok(load('fn/object/seal')({}));
  ok(load('fn/object/set-prototype-of')({}, []) instanceof Array);
  ok(load('fn/object/entries')({ q: 2 })[0][0] === 'q');
  ok(load('fn/object/values')({ q: 2 })[0] === 2);
  ok(load('fn/object/get-own-property-descriptors')({ q: 1 }).q.enumerable);
  ok(typeof load('fn/object/define-getter') === 'function');
  ok(typeof load('fn/object/define-setter') === 'function');
  ok(typeof load('fn/object/lookup-getter') === 'function');
  ok(typeof load('fn/object/lookup-setter') === 'function');
  ok('values' in load('fn/object'));
  ok(load('fn/function/bind')(function (a, b) {
    return this + a + b;
  }, 1, 2)(3) === 6);
  ok(load('fn/function/virtual/bind').call(function (a, b) {
    return this + a + b;
  }, 1, 2)(3) === 6);
  ok(load('fn/function/virtual').bind.call(function (a, b) {
    return this + a + b;
  }, 1, 2)(3) === 6);
  load('fn/function/name');
  load('fn/function/has-instance');
  // eslint-disable-next-line prefer-arrow-callback
  ok(Function[load('fn/symbol/has-instance')](function () { /* empty */ }));
  ok('bind' in load('fn/function'));
  ok(load('fn/array/is-array')([]));
  ok(Array.isArray(load('fn/array/from')('qwe')));
  ok(Array.isArray(load('fn/array/of')('q', 'w', 'e')));
  ok(load('fn/array/join')('qwe', 1) === 'q1w1e');
  ok(load('fn/array/slice')('qwe', 1)[1] === 'e');
  ok(load('fn/array/sort')([1, 3, 2])[1] === 2);
  ok(typeof load('fn/array/for-each') === 'function');
  ok(typeof load('fn/array/map') === 'function');
  ok(typeof load('fn/array/filter') === 'function');
  ok(typeof load('fn/array/some') === 'function');
  ok(typeof load('fn/array/every') === 'function');
  ok(typeof load('fn/array/reduce') === 'function');
  ok(typeof load('fn/array/reduce-right') === 'function');
  ok(typeof load('fn/array/index-of') === 'function');
  ok(typeof load('fn/array/last-index-of') === 'function');
  ok(load('fn/array/copy-within')([1, 2, 3, 4, 5], 0, 3)[0] === 4);
  ok('next' in load('fn/array/entries')([]));
  load('fn/array/end');
  ok(load('fn/array/fill')(Array(5), 2)[0] === 2);
  ok(load('fn/array/find')([2, 3, 4], it => it % 2) === 3);
  ok(load('fn/array/find-index')([2, 3, 4], it => it % 2) === 1);
  ok('next' in load('fn/array/keys')([]));
  ok('next' in load('fn/array/values')([]));
  ok(load('fn/array/includes')([1, 2, 3], 2));
  ok('next' in load('fn/array/iterator')([]));
  ok(load('fn/array/virtual/join').call('qwe', 1) === 'q1w1e');
  ok(load('fn/array/virtual/slice').call('qwe', 1)[1] === 'e');
  ok(load('fn/array/virtual/sort').call([1, 3, 2])[1] === 2);
  ok(typeof load('fn/array/virtual/for-each') === 'function');
  ok(typeof load('fn/array/virtual/map') === 'function');
  ok(typeof load('fn/array/virtual/filter') === 'function');
  ok(typeof load('fn/array/virtual/some') === 'function');
  ok(typeof load('fn/array/virtual/every') === 'function');
  ok(typeof load('fn/array/virtual/reduce') === 'function');
  ok(typeof load('fn/array/virtual/reduce-right') === 'function');
  ok(typeof load('fn/array/virtual/index-of') === 'function');
  ok(typeof load('fn/array/virtual/last-index-of') === 'function');
  ok(load('fn/array/virtual/copy-within').call([1, 2, 3, 4, 5], 0, 3)[0] === 4);
  ok('next' in load('fn/array/virtual/entries').call([]));
  ok(load('fn/array/virtual/fill').call(Array(5), 2)[0] === 2);
  ok(load('fn/array/virtual/find').call([2, 3, 4], it => it % 2) === 3);
  ok(load('fn/array/virtual/find-index').call([2, 3, 4], it => it % 2) === 1);
  ok('next' in load('fn/array/virtual/keys').call([]));
  ok('next' in load('fn/array/virtual/values').call([]));
  ok(load('fn/array/virtual/includes').call([1, 2, 3], 2));
  ok('next' in load('fn/array/virtual/iterator').call([]));
  ok(load('fn/array/virtual').includes.call([1, 2, 3], 2));
  ok('from' in load('fn/array'));
  ok(load('fn/array/concat')([1, 2, 3], [4, 5, 6]).length === 6);
  ok(load('fn/array/pop')([1, 2, 3]) === 3);
  ok(load('fn/array/push')([1, 2, 3], 4) === 4);
  ok(load('fn/array/reverse')([1, 2, 3])[0] === 3);
  ok(load('fn/array/shift')([1, 2, 3]) === 1);
  ok(load('fn/array/splice')([1, 2, 3], 1, 2)[0] === 2);
  ok(load('fn/array/unshift')([1, 2, 3], 0) === 4);
  ok(load('fn/math/acosh')(1) === 0);
  ok(Object.is(load('fn/math/asinh')(-0), -0));
  ok(load('fn/math/atanh')(1) === Infinity);
  ok(load('fn/math/cbrt')(-8) === -2);
  ok(load('fn/math/clz32')(0) === 32);
  ok(load('fn/math/cosh')(0) === 1);
  ok(load('fn/math/expm1')(-Infinity) === -1);
  ok(load('fn/math/fround')(0) === 0);
  ok(load('fn/math/hypot')(3, 4) === 5);
  ok(load('fn/math/imul')(2, 2) === 4);
  ok(load('fn/math/log10')(-0) === -Infinity);
  ok(load('fn/math/log1p')(-1) === -Infinity);
  ok(load('fn/math/log2')(1) === 0);
  ok(load('fn/math/sign')(-2) === -1);
  ok(Object.is(load('fn/math/sinh')(-0), -0));
  ok(load('fn/math/tanh')(Infinity) === 1);
  ok(load('fn/math/trunc')(1.5) === 1);
  ok(load('fn/math/clamp')(6, 2, 4) === 4);
  ok(load('fn/math/deg-per-rad') === Math.PI / 180);
  ok(load('fn/math/degrees')(Math.PI) === 180);
  ok(load('fn/math/fscale')(3, 1, 2, 1, 2) === 3);
  ok(load('fn/math/iaddh')(3, 2, 0xffffffff, 4) === 7);
  ok(load('fn/math/isubh')(3, 4, 0xffffffff, 2) === 1);
  ok(load('fn/math/imulh')(0xffffffff, 7) === -1);
  ok(load('fn/math/rad-per-deg') === 180 / Math.PI);
  ok(load('fn/math/radians')(180) === Math.PI);
  ok(load('fn/math/scale')(3, 1, 2, 1, 2) === 3);
  ok(load('fn/math/umulh')(0xffffffff, 7) === 6);
  ok(load('fn/math/signbit')(-2) === false);
  ok(load('fn/number/constructor')('5') === 5);
  ok(load('fn/number/epsilon') === Math.pow(2, -52));
  ok(load('fn/number/is-finite')(42.5));
  ok(load('fn/number/is-integer')(42.5) === false);
  ok(load('fn/number/is-nan')(NaN));
  ok(load('fn/number/is-safe-integer')(42));
  ok(load('fn/number/max-safe-integer') === 0x1fffffffffffff);
  ok(load('fn/number/min-safe-integer') === -0x1fffffffffffff);
  ok(load('fn/number/parse-float')('1.5') === 1.5);
  ok(load('fn/number/parse-int')('2.1') === 2);
  ok(load('fn/number/to-fixed')(1, 1) === '1.0');
  ok(load('fn/number/to-precision')(1) === '1');
  ok(load('fn/parse-float')('1.5') === 1.5);
  ok(load('fn/parse-int')('2.1') === 2);
  ok(load('fn/number/virtual/to-fixed').call(1, 1) === '1.0');
  ok(load('fn/number/virtual/to-precision').call(1) === '1');
  ok(load('fn/number/virtual').toFixed.call(42, 2) === '42.00');
  ok('isNaN' in load('fn/number'));
  ok(load('fn/reflect/apply')((a, b) => a + b, null, [1, 2]) === 3);
  ok(load('fn/reflect/construct')(function () {
    return this.a = 2;
  }, []).a === 2);
  let O;
  load('fn/reflect/define-property')(O = {}, 'a', { value: 42 });
  ok(O.a === 42);
  ok(load('fn/reflect/delete-property')({ q: 1 }, 'q'));
  ok(load('fn/reflect/get')({ q: 1 }, 'q') === 1);
  ok(load('fn/reflect/get-own-property-descriptor')({ q: 1 }, 'q').enumerable);
  ok(load('fn/reflect/get-prototype-of')([]) === Array.prototype);
  ok(load('fn/reflect/has')({ q: 1 }, 'q'));
  ok(load('fn/reflect/is-extensible')({}));
  ok(load('fn/reflect/own-keys')({ q: 1 })[0] === 'q');
  ok(load('fn/reflect/prevent-extensions')({}));
  ok(load('fn/reflect/set')({}, 'a', 42));
  load('fn/reflect/set-prototype-of')(O = {}, []);
  ok(O instanceof Array);
  ok(typeof load('fn/reflect/define-metadata') === 'function');
  ok(typeof load('fn/reflect/delete-metadata') === 'function');
  ok(typeof load('fn/reflect/get-metadata') === 'function');
  ok(typeof load('fn/reflect/get-metadata-keys') === 'function');
  ok(typeof load('fn/reflect/get-own-metadata') === 'function');
  ok(typeof load('fn/reflect/get-own-metadata-keys') === 'function');
  ok(typeof load('fn/reflect/has-metadata') === 'function');
  ok(typeof load('fn/reflect/has-own-metadata') === 'function');
  ok(typeof load('fn/reflect/metadata') === 'function');
  ok('has' in load('fn/reflect'));
  ok(load('fn/string/from-code-point')(97) === 'a');
  ok(load('fn/string/raw')({ raw: 'test' }, 0, 1, 2) === 't0e1s2t');
  ok(load('fn/string/code-point-at')('a', 0) === 97);
  ok(load('fn/string/ends-with')('qwe', 'we'));
  ok(load('fn/string/includes')('qwe', 'w'));
  ok(load('fn/string/repeat')('q', 3) === 'qqq');
  ok(load('fn/string/starts-with')('qwe', 'qw'));
  ok(typeof load('fn/string/anchor') === 'function');
  ok(typeof load('fn/string/big') === 'function');
  ok(typeof load('fn/string/blink') === 'function');
  ok(typeof load('fn/string/bold') === 'function');
  ok(typeof load('fn/string/fixed') === 'function');
  ok(typeof load('fn/string/fontcolor') === 'function');
  ok(typeof load('fn/string/fontsize') === 'function');
  ok(typeof load('fn/string/italics') === 'function');
  ok(typeof load('fn/string/link') === 'function');
  ok(typeof load('fn/string/small') === 'function');
  ok(typeof load('fn/string/strike') === 'function');
  ok(typeof load('fn/string/sub') === 'function');
  ok(typeof load('fn/string/sup') === 'function');
  ok(load('fn/string/at')('a', 0) === 'a');
  ok('next' in load('fn/string/code-points')('a'));
  ok(load('fn/string/pad-start')('a', 3) === '  a');
  ok(load('fn/string/pad-end')('a', 3) === 'a  ');
  ok(load('fn/string/trim-start')(' a ') === 'a ');
  ok(load('fn/string/trim-end')(' a ') === ' a');
  ok(load('fn/string/trim-left')(' a ') === 'a ');
  ok(load('fn/string/trim-right')(' a ') === ' a');
  ok('next' in load('fn/string/match-all')('a', /./));
  ok('next' in load('fn/string/iterator')('qwe'));
  ok(load('fn/string/virtual/code-point-at').call('a', 0) === 97);
  ok(load('fn/string/virtual/ends-with').call('qwe', 'we'));
  ok(load('fn/string/virtual/includes').call('qwe', 'w'));
  ok(load('fn/string/virtual/repeat').call('q', 3) === 'qqq');
  ok(load('fn/string/virtual/starts-with').call('qwe', 'qw'));
  ok(typeof load('fn/string/virtual/anchor') === 'function');
  ok(typeof load('fn/string/virtual/big') === 'function');
  ok(typeof load('fn/string/virtual/blink') === 'function');
  ok(typeof load('fn/string/virtual/bold') === 'function');
  ok(typeof load('fn/string/virtual/fixed') === 'function');
  ok(typeof load('fn/string/virtual/fontcolor') === 'function');
  ok(typeof load('fn/string/virtual/fontsize') === 'function');
  ok(typeof load('fn/string/virtual/italics') === 'function');
  ok(typeof load('fn/string/virtual/link') === 'function');
  ok(typeof load('fn/string/virtual/small') === 'function');
  ok(typeof load('fn/string/virtual/strike') === 'function');
  ok(typeof load('fn/string/virtual/sub') === 'function');
  ok(typeof load('fn/string/virtual/sup') === 'function');
  ok(load('fn/string/virtual/at').call('a', 0) === 'a');
  ok('next' in load('fn/string/virtual/code-points').call('a'));
  ok(load('fn/string/virtual/pad-start').call('a', 3) === '  a');
  ok(load('fn/string/virtual/pad-end').call('a', 3) === 'a  ');
  ok(load('fn/string/virtual/trim-start').call(' a ') === 'a ');
  ok(load('fn/string/virtual/trim-end').call(' a ') === ' a');
  ok(load('fn/string/virtual/trim-left').call(' a ') === 'a ');
  ok(load('fn/string/virtual/trim-right').call(' a ') === ' a');
  ok('next' in load('fn/string/virtual/match-all').call('a', /./));
  ok(load('fn/string/virtual').at.call('a', 0) === 'a');
  ok('next' in load('fn/string/virtual/iterator').call('qwe'));
  ok('raw' in load('fn/string'));
  ok(String(load('fn/regexp/constructor')('a', 'g')) === '/a/g');
  ok(load('fn/regexp/to-string')(/./g) === '/./g');
  ok(load('fn/regexp/flags')(/./g) === 'g');
  ok(typeof load('fn/regexp/match') === 'function');
  ok(typeof load('fn/regexp/replace') === 'function');
  ok(typeof load('fn/regexp/search') === 'function');
  ok(typeof load('fn/regexp/split') === 'function');
  load('fn/regexp');
  ok(load('fn/json').stringify([1]) === '[1]');
  ok(load('fn/json/stringify')([1]) === '[1]');
  ok(typeof load('fn/date/now')(new Date()) === 'number');
  ok(typeof load('fn/date/to-string')(new Date()) === 'string');
  ok(typeof load('fn/date/to-primitive')(new Date(), 'number') === 'number');
  ok(typeof load('fn/date/to-iso-string')(new Date()) === 'string');
  ok(load('fn/date/to-json')(Infinity) === null);
  ok(load('fn/date'));
  load('fn/symbol/description');
  ok(load('fn/symbol/has-instance'));
  ok(load('fn/symbol/is-concat-spreadable'));
  ok(load('fn/symbol/iterator'));
  ok(load('fn/symbol/match'));
  ok(load('fn/symbol/replace'));
  ok(load('fn/symbol/search'));
  ok(load('fn/symbol/species'));
  ok(load('fn/symbol/split'));
  ok(load('fn/symbol/to-primitive'));
  ok(load('fn/symbol/to-string-tag'));
  ok(load('fn/symbol/unscopables'));
  ok(load('fn/symbol/async-iterator'));
  ok(load('fn/symbol/observable'));
  ok(typeof load('fn/symbol/for') === 'function');
  ok(typeof load('fn/symbol/key-for') === 'function');
  ok('iterator' in load('fn/symbol'));
  const Map = load('fn/map');
  const Set = load('fn/set');
  const WeakMap = load('fn/weak-map');
  const WeakSet = load('fn/weak-set');
  ok(new Map([[1, 2], [3, 4]]).size === 2);
  ok(new Set([1, 2, 3, 2, 1]).size === 3);
  ok(new WeakMap([[O = {}, 42]]).get(O) === 42);
  ok(new WeakSet([O = {}]).has(O));
  ok(load('fn/map/of')([1, 2], [3, 4]) instanceof Map);
  ok(load('fn/set/of')(1, 2, 3, 2, 1) instanceof Set);
  ok(load('fn/weak-map/of')([{}, 1], [[], 2]) instanceof WeakMap);
  ok(load('fn/weak-set/of')({}, []) instanceof WeakSet);
  ok(load('fn/map/from')([[1, 2], [3, 4]]) instanceof Map);
  ok(load('fn/set/from')([1, 2, 3, 2, 1]) instanceof Set);
  ok(load('fn/weak-map/from')([[{}, 1], [[], 2]]) instanceof WeakMap);
  ok(load('fn/weak-set/from')([{}, []]) instanceof WeakSet);
  ok(load('fn/map/filter')(new Map([[1, 2], [2, 3], [3, 4]]), it => it % 2).size === 1);
  ok(load('fn/map/group-by')([], it => it) instanceof Map);
  ok(load('fn/map/key-by')([], it => it) instanceof Map);
  ok(load('fn/map/map-keys')(new Map([[1, 2], [2, 3], [3, 4]]), it => it).size === 3);
  ok(load('fn/map/map-values')(new Map([[1, 2], [2, 3], [3, 4]]), it => it).size === 3);
  ok(load('fn/map/merge')(new Map([[1, 2], [2, 3]]), [[2, 4], [4, 5]]).size === 3);
  ok(load('fn/set/add-all')(new Set([1, 2, 3]), 4, 5).size === 5);
  ok(load('fn/set/delete-all')(new Set([1, 2, 3]), 4, 5) === false);
  ok(load('fn/set/difference')(new Set([1, 2, 3]), [3, 4, 5]).size === 2);
  ok(load('fn/set/every')(new Set([1, 2, 3]), it => typeof it == 'number'));
  ok(load('fn/set/filter')(new Set([1, 2, 3]), it => it % 2).size === 2);
  ok(load('fn/set/find')(new Set([2, 3, 4]), it => it % 2) === 3);
  ok(load('fn/set/intersect')(new Set([1, 2, 3]), [1, 3, 4]).size === 2);
  ok(load('fn/set/join')(new Set([1, 2, 3])) === '1,2,3');
  ok(load('fn/set/map')(new Set([1, 2, 3]), it => it % 2).size === 2);
  ok(load('fn/set/reduce')(new Set([1, 2, 3]), (it, v) => it + v) === 6);
  ok(load('fn/set/some')(new Set([1, 2, 3]), it => typeof it == 'number'));
  ok(load('fn/set/symmetric-difference')(new Set([1, 2, 3]), [3, 4, 5]).size === 4);
  ok(load('fn/set/union')(new Set([1, 2, 3]), [3, 4, 5]).size === 5);
  ok('all' in load('fn/promise'));
  ok(load('fn/promise/try')(() => 42) instanceof load('fn/promise'));
  ok('from' in load('fn/observable'));
  ok(load('fn/global').Math === Math);
  ok(typeof load('fn/dom-collections').iterator === 'function');
  ok(typeof load('fn/dom-collections/iterator') === 'function');
  ok(typeof load('fn/set-timeout') === 'function');
  ok(typeof load('fn/set-interval') === 'function');
  ok(typeof load('fn/set-immediate') === 'function');
  ok(typeof load('fn/clear-immediate') === 'function');
  ok(typeof load('fn/asap') === 'function');
  ok(load('fn/is-iterable')([]));
  ok(typeof load('fn/get-iterator-method')([]) === 'function');
  ok('next' in load('fn/get-iterator')([]));
  ok('from' in load('es/array'));
  load('es/function');
  ok(typeof load('es/map') === 'function');
  ok(typeof load('es/set') === 'function');
  ok(typeof load('es/weak-map') === 'function');
  ok(typeof load('es/weak-set') === 'function');
  ok('hypot' in load('es/math'));
  ok('MAX_SAFE_INTEGER' in load('es/number'));
  ok(load('es/parse-float')('1.5') === 1.5);
  ok(load('es/parse-int')('2.1') === 2);
  ok('assign' in load('es/object'));
  ok(typeof load('es/promise') === 'function');
  ok('ownKeys' in load('es/reflect'));
  load('es/regexp');
  ok('raw' in load('es/string'));
  ok(load('es/date'));
  ok(typeof load('es/symbol') === 'function');
  ok('Map' in load('es'));
  ok('setTimeout' in load('web/timers'));
  ok('setImmediate' in load('web/immediate'));
  load('web/dom-collections');
  ok('setImmediate' in load('web'));
  ok(load('stage/4'));
  ok(load('stage/3'));
  ok(load('stage/2'));
  ok(load('stage/1'));
  ok(load('stage/0'));
  ok(load('stage/pre'));
  ok(load('stage'));
}

ok(typeof load('fn/typed/array-buffer') === 'function');
ok(typeof load('fn/typed/data-view') === 'function');
ok(typeof load('fn/typed/int8-array') === 'function');
ok(typeof load('fn/typed/uint8-array') === 'function');
ok(typeof load('fn/typed/uint8-clamped-array') === 'function');
ok(typeof load('fn/typed/int16-array') === 'function');
ok(typeof load('fn/typed/uint16-array') === 'function');
ok(typeof load('fn/typed/int32-array') === 'function');
ok(typeof load('fn/typed/uint32-array') === 'function');
ok(typeof load('fn/typed/float32-array') === 'function');
ok(typeof load('fn/typed/float64-array') === 'function');
ok(typeof load('fn/typed').Uint32Array === 'function');
ok(typeof load('es/typed').Uint32Array === 'function');

// eslint-disable-next-line no-console
console.log(`Tested ${ tested } CommonJS entry points`);
